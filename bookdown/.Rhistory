library(cepespR)
# Definindo link da requisição:
link <- "cepesp.io/api/consulta/athena/query?table=candidatos&anos=2014&cargo=1&c[]=ANO_ELEICAO&c[]=NUM_TURNO&c[]=SIGLA_UE&c[]=DESCRICAO_CARGO&c[]=SIGLA_PARTIDO&c[]=NUMERO_CANDIDATO&c[]=CPF_CANDIDATO&c[]=NOME_URNA_CANDIDATO&c[]=DESCRICAO_SEXO&c[]=DESCRICAO_COR_RACA&c[]=DESC_SIT_TOT_TURNO&filters[DESCRICAO_COR_RACA]=PRETA"
# Fazendo requisição:
requis <- httr::GET("cepesp.io/api/consulta/athena/query?table=candidatos&anos=2014&cargo=1&c[]=ANO_ELEICAO&c[]=NUM_TURNO&c[]=SIGLA_UE&c[]=DESCRICAO_CARGO&c[]=SIGLA_PARTIDO&c[]=NUMERO_CANDIDATO&c[]=CPF_CANDIDATO&c[]=NOME_URNA_CANDIDATO&c[]=DESCRICAO_SEXO&c[]=DESCRICAO_COR_RACA&c[]=DESC_SIT_TOT_TURNO&filters[DESCRICAO_COR_RACA]=PRETA")
install.packages("jsonlite")
require("httr")
require("jsonlite")
# Transformando a lista em texto:
requis_text <- httr::content(requis, 'text')
# Transformando de JSON para o formato de banco de dados (data.frame):
requis_json <- fromJSON(requis_text, flatten = TRUE)
View(requis_json)
# Transformando de JSON para o formato de banco de dados (data.frame):
requis_json <- fromJSON(requis, flatten = TRUE)
# Transformando de JSON para o formato de banco de dados (data.frame):
requis_json <- fromJSON(requis_text, flatten = TRUE)
requis_df <- as.data.frame(requis_json)
View(requis_df)
requis_json$id
paste0('cepesp.io/api/consulta/athena/result?id=',requis_json$id,'&ignore_version=true'
)
# Assim vamos importar o banco desejado inserindo o nosso id:
requis2 <- httr::GET(paste0('cepesp.io/api/consulta/athena/result?id=',requis_json$id,'&ignore_version=true'))
View(requis2)
requis2_df <- as.data.frame(requis2)
requis2_df <- httr::content(requis2, 'csv')
requis2_df <- httr::content(requis2, 'pased')
requis2_df <- httr::content(requis2, 'text')
requis2 <- httr::GET(paste0('cepesp.io/api/consulta/athena/result?id=',requis_json$id,'&ignore_version=true'))
requis2_df <- httr::content(requis2, 'text')
requis2_df<-as.data.frame(requis2_df)
View(requis2_df)
requis2_df
requis2_df <- httr::content(requis2, 'csv')
requis2_df <- httr::content(requis2, 'parsed')
View(requis2_df)
requis2_df<-as.data.frame(requis2_df)
View(requis2_df)
rm(list=ls())
library(cepespR)
library(dplyr)
candpres_14 <- get_candidates(year = 2014, position = "Presidente")
table(candpres_14$DESCRICAO_COR_RACA)
table(candpres_14$DESCRICAO_SEXO)
summary((candpres_14$DESCRICAO_COR_RACA))
table(candpres_14$SIGLA_PARTIDO)
summary(candpres_14$IDADE_DATA_ELEICAO)
deputadosPSL2018 <- get_candidates(year=2018, # Obrigatório: ano da eleição
position="Deputado Federal", #Obrigatório: cargo disputado
only_elected = T, # Opcional: receber apenas os eleitos
party = 17) # Opcional: receber apenas os candidatos do PT
elpres_14 <- get_elections(year = 2014, # Obrigatório especificar o ano.
position = "Presidente") # Obrigatório especificar o cargo.
View(elpres_14)
rm(elpres_14)
cand_2014 <- get_candidates(2014, 6)
summary(cand_2014)
summary(cand_2014$DESCRICAO_SEXO)
cand_2014 <- get_elections(2014, 6)
el2014 <- get_elections(2018, 6, regional_aggregation = 0)
head(el2014)
el2018<-el2014
rm(el2014)
cand_negros_2018 <- el2018 %>%
filter(CODIGO_COR_RACA == 2L | CODIGO_COR_RACA == 3L) # Selecionando candidatos pretos e pardos (códigos 2 e 3, respectivamente).
View(cand_negros_2018)
summary(el2018$CODIGO_COR_RACA)
cand_negros_2018 <- el2018 %>%
filter(CODIGO_COR_RACA == '02' | CODIGO_COR_RACA == '03') # Selecionando candidatos pretos e pardos (códigos 2 e 3, respectivamente).
View(cand_negros_2018)
summary(cand_negros_2018$DESC_SIT_TOT_TURNO)
summary(as.factor(cand_negros_2018$DESC_SIT_TOT_TURNO))
tabela_sexo_negros_eleitos <- el2018 %>%
filter(CODIGO_COR_RACA == '02' | CODIGO_COR_RACA == '03') %>%
filter(DESC_SIT_TOT_TURNO == 'ELEITO POR QP' | DESC_SIT_TOT_TURNO == 'ELEITO POR MEDIA') %>%
table(DESCRICAO_SEXO)
tabela_sexo_negros_eleitos <- el2018 %>%
filter(CODIGO_COR_RACA == '02' | CODIGO_COR_RACA == '03') %>%
filter(DESC_SIT_TOT_TURNO == 'ELEITO POR QP' | DESC_SIT_TOT_TURNO == 'ELEITO POR MEDIA') %>%
select(DESCRICAO_SEXO) %>%
table()
tabela_sexo_negros_eleitos <- el2018 %>%
filter(CODIGO_COR_RACA == '02' | CODIGO_COR_RACA == '03') %>%
filter(DESC_SIT_TOT_TURNO == 'ELEITO POR QP' | DESC_SIT_TOT_TURNO == 'ELEITO POR MEDIA')
table(tabela_sexo_negros_eleitos$DESCRICAO_SEXO)
rm(list = ls())
get_wd()
getwd()
